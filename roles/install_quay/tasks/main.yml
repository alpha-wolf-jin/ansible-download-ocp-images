---
## tasks file for mirroring-operator
##

- name: Download mirror registry
  ansible.builtin.get_url:
    url: "{{ item.url_name }}"
    dest: "{{ quay_install_home }}/{{ item.file_name }}"
  loop:
  - url_name: "{{ mirror_registry_download_url }}"
    file_name: "{{ mirror_registry_download_url | basename }}"

- name: Extract tar file for mirror registry installation
  ansible.builtin.unarchive:
    src: "{{ quay_install_home }}/{{ mirror_registry_download_url | basename }}"
    dest: "{{ quay_install_home }}"

- name: Set a hostname
  ansible.builtin.hostname:
    name: "{{ dest_registry }}"

- name: Replace a localhost entry with our own
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "127.0.0.1 {{ dest_registry }}"
    owner: root
    group: root
    mode: '0644'

- name: Install Quay
  ansible.builtin.shell: |
    ./mirror-registry install --quayHostname "{{ dest_registry }}" --quayRoot  /opt/registry/quay 
  args:
    chdir: "{{ quay_install_home }}"
  register: quay_install_result
  until: "'Quay installed successfully' in quay_install_result.stdout"
  retries: 2
  delay: 30

- name: Copy install log into file
  ansible.builtin.copy:
    content: "{{ quay_install_result }}"
    dest: "{{ quay_install_home }}/install.log"
    owner: root
    group: root
    mode: '0644'

- debug: var=quay_install_result

- debug:
    msg: "{{ quay_install_result.stdout_lines[-1] }}"

- set_fact:
    src_str: "{{ quay_install_result.stdout_lines[-1] }}"

- name: Extract Password from the installation log
  register: results
  args:
    stdin: |
      import re
      s1 = re.escape("{{ src_str }}")
      s2 = re.findall('init\\\,\\\ \w+', s1)
      search_pattern = '\s+(.+?)$'
      f = re.search(search_pattern, s2[-1]).group(1).strip()
      print(f)
  command: /usr/bin/python3

- debug:
    msg: "{{ results.stdout }}"

- name: Set quay credentail parms' value
  set_fact:
    quay_user: init
    quay_pwd: "{{ quay_install_result.stdout_lines[-1] | regex_replace('^.*init\\,\\s+(.*)\\)\\s+.*$', '\\1') }}"


- name: Copy PWD into file
  ansible.builtin.copy:
    content: "{{ quay_user }} : {{ quay_pwd }}"
    dest: "{{ quay_install_home }}/quay_password"
    owner: root
    group: root
    mode: '0644'

- name: Copy install log into file
  ansible.builtin.copy:
    src: "{{ quay_home }}/quay-rootCA/rootCA.pem"
    dest: /etc/pki/ca-trust/source/anchors/rootCA.pem
    owner: root
    group: root
    mode: '0644'
    backup: yes

- name: Update CA & Create Auth file for Quay
  ansible.builtin.shell: |
    update-ca-trust 
  args:
    chdir: "{{ quay_install_home }}"



#- name: Create dir for mirroring
#  ansible.builtin.file:
#    path: "{{ item }}"
#    state: directory
#    recurse: yes
#  loop:
#  - "{{ mirror_home }}"


#- name: Download mirror registry
#  ansible.builtin.get_url:
#    url: "{{ item.url_name }}"
#    dest: "{{ item.file_name }}"
#  loop:
#  - url_name: "{{ grpcurl_download_url }}"
#    file_name: "{{ quay_install_home }}/{{ grpcurl_download_url | basename }}"
#  - url_name: "{{ opm_download_url }}"
#    file_name: "{{ quay_install_home }}/{{ opm_download_url | basename }}"
#  - url_name: "{{ oc_download_url }}"
#    file_name: "{{ quay_install_home }}/{{ oc_download_url | basename }}"
#  - url_name: https://www.redhat.com/security/data/55A34A82.txt
#    file_name: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-isv
#
#- name: Extract tar file for mirror registry installation
#  ansible.builtin.unarchive:
#    src: "{{ item.file_name }}"
#    dest: "{{ item.dest_name }}"
#  loop:
#  - dest_name: /usr/local/sbin
#    file_name: "{{ quay_install_home }}/{{ grpcurl_download_url | basename }}"
#  - dest_name: /usr/local/sbin
#    file_name: "{{ quay_install_home }}/{{ opm_download_url | basename }}"
#  - dest_name: /usr/local/sbin
#    file_name: "{{ quay_install_home }}/{{ oc_download_url | basename }}"

#- name: Copy the policy.json
#  ansible.builtin.copy:
#    src: policy.json
#    dest: /etc/containers/policy.json
#    owner: root
#    group: root
#    mode: '0644'
#

#- name: Update CA & Create Auth file for Quay
#  ansible.builtin.shell: |
#    update-ca-trust 
#    podman login --authfile "{{ reg_creds }}" -u {{ quay_user }} -p {{ quay_pwd }} {{ dest_registry }}:{{ dest_registry_port }}
#    podman login --authfile "{{ reg_creds }}" -u {{ registry_user }} -p {{ registry_pwd }} registry.redhat.io
#  args:
#    chdir: "{{ quay_install_home }}"

#- name: Remove an image
#  containers.podman.podman_image:
#    name: "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror/{{ new_operator_index }}:{{ ocp_version }}"
#    state: absent
#
#
#- name: Trailor Operator index
#  ansible.builtin.shell: |
#    podman login --authfile="{{ reg_creds }}"  "{{ dest_registry }}:{{ dest_registry_port }}"
#    podman login -u {{ registry_user }} -p {{ registry_pwd }}   registry.redhat.io
#    opm index prune -f "registry.redhat.io/redhat/{{ soure_operator_index }}:{{ ocp_version }}" -p {{ operator_list | join(',') }} -t "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror/{{ new_operator_index }}:{{ ocp_version }}"
#  args:
#    chdir: "{{ quay_install_home }}"

#- name: Build and push an image to multiple registries with separate parameters
#  containers.podman.podman_image:
#    name: "{{ item.name }}"
#    tag: "{{ item.tag }}"
#    push: yes
#    auth_file: "{{ reg_creds }}"
#    push_args:
#      dest: "{{ item.dest }}"
#  loop:
#  - name: "{{ new_operator_index }}"
#    tag: "{{ ocp_version }}"
#    dest: "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror/"

#- name: Tail Operator index
#  ansible.builtin.shell: |
#    oc adm catalog mirror "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror/{{ new_operator_index }}:{{ ocp_version }}" "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror"  -a "{{ reg_creds }}" --index-filter-by-os='linux/amd64' --manifests-only
#  args:
#    chdir: "{{ mirror_home }}"
#  register: result
#
#- debug: var=result
#
#
