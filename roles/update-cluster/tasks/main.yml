---
## tasks file for mirroring-operator
##

#- name: update pull-secret
#  ansible.builtin.shell: |
#    oc get secret pull-secret -n openshift-config --template='{{ '{{' }} index .data ".dockerconfigjson" | base64decode {{ '}}' }}' > {{ cluster_home }}/current-pull-secret.json
#    jq -c --argjson var "$(jq .auths {{ reg_creds }})" '.auths += $var' ./current-pull-secret.json > {{ cluster_home }}/merged_pullsecret.json
#    oc set data secret/pull-secret --from-file=.dockerconfigjson={{ cluster_home }}/merged_pullsecret.json -n openshift-config
#  args:
#    chdir: "{{ cluster_home }}"
#  register: result
#
#- debug: var=result


#- name: update mirror rootCA
#  ansible.builtin.shell: |
#    oc create configmap registry-cas -n openshift-config \
#    --from-file={{ dest_registry }}..{{ dest_registry_port }}={{ quay_home }}/quay-rootCA/rootCA.pem
#    oc patch image.config.openshift.io/cluster --patch '{"spec":{"additionalTrustedCA":{"name":"registry-cas"}}}' --type=merge
#  args:
#    chdir: "{{ cluster_home }}"
#  register: result
# 
#- debug: var=result

- name: Disable Catalog 
  ansible.builtin.shell: |
    oc patch OperatorHub cluster --type json \
    -p '[{"op": "add", "path": "/spec/disableAllDefaultSources", "value": true}]'
    oc apply -f {{ mirror_home }}/manifests-{{ new_operator_index }}/catalogSource.yaml
  args:
    chdir: "{{ cluster_home }}"
  register: result
 
- debug: var=result

#- name: Copy install log into file
#  ansible.builtin.copy:
#    content: "{{ quay_install_result }}"
#    dest: "{{ quay_install_home }}/install.log"
#    owner: root
#    group: root
#    mode: '0644'
#
#- debug: var=quay_install_result
#
#- debug:
#    msg: "{{ quay_install_result.stdout_lines[-1] }}"

#- name: Extract Password from the installation log
#  register: results
#  args:
#    stdin: |
#      import re
#      s1 = re.escape({{ quay_install_result.stdout_lines[-1] }})
#      s2 = re.findall('init\\\,\\\ \w+', s1)
#      search_pattern = '\s+(.+?)$'
#      f = re.search(search_pattern, s2[-1]).group(1).strip()
#      print(f)
#  command: /usr/bin/python3
#
#- debug:
#    msg: "{{ results.stdout }}"

#- name: Set quay credentail parms' value
#  set_fact:
#    quay_user: init
#    quay_pwd: "{{ quay_install_result.stdout_lines[-1] | regex_replace('^.*init\\,\\s+(.*)\\)\\s+.*$', '\\1') }}"
#
#
#- name: Copy PWD into file
#  ansible.builtin.copy:
#    content: "{{ quay_user }} : {{ quay_pwd }}"
#    dest: "{{ quay_install_home }}/quay_password"
#    owner: root
#    group: root
#    mode: '0644'
#
#- name: Copy install log into file
#  ansible.builtin.copy:
#    src: "{{ quay_home }}/quay-rootCA/rootCA.pem"
#    dest: /etc/pki/ca-trust/source/anchors/rootCA.pem
#    owner: root
#    group: root
#    mode: '0644'
#    backup: yes
#
#- name: Update CA & Create Auth file for Quay
#  ansible.builtin.shell: |
#    update-ca-trust 
#    podman login --authfile "{{ reg_creds }}" -u {{ quay_user }} -p {{ quay_pwd }} {{ dest_registry }}:{{ dest_registry_port }}
#    podman login --authfile "{{ reg_creds }}" -u {{ registry_user }} -p {{ registry_pwd }} registry.redhat.io
#  args:
#    chdir: "{{ quay_install_home }}"



#- name: Create dir for mirroring
#  ansible.builtin.file:
#    path: "{{ item }}"
#    state: directory
#    recurse: yes
#  loop:
#  - "{{ mirror_home }}"


#- name: Download mirror registry
#  ansible.builtin.get_url:
#    url: "{{ item.url_name }}"
#    dest: "{{ item.file_name }}"
#  loop:
#  - url_name: "{{ grpcurl_download_url }}"
#    file_name: "{{ quay_install_home }}/{{ grpcurl_download_url | basename }}"
#  - url_name: "{{ opm_download_url }}"
#    file_name: "{{ quay_install_home }}/{{ opm_download_url | basename }}"
#  - url_name: "{{ oc_download_url }}"
#    file_name: "{{ quay_install_home }}/{{ oc_download_url | basename }}"
#  - url_name: https://www.redhat.com/security/data/55A34A82.txt
#    file_name: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-isv
#
#- name: Extract tar file for mirror registry installation
#  ansible.builtin.unarchive:
#    src: "{{ item.file_name }}"
#    dest: "{{ item.dest_name }}"
#  loop:
#  - dest_name: /usr/local/sbin
#    file_name: "{{ quay_install_home }}/{{ grpcurl_download_url | basename }}"
#  - dest_name: /usr/local/sbin
#    file_name: "{{ quay_install_home }}/{{ opm_download_url | basename }}"
#  - dest_name: /usr/local/sbin
#    file_name: "{{ quay_install_home }}/{{ oc_download_url | basename }}"

#- name: Copy the policy.json
#  ansible.builtin.copy:
#    src: policy.json
#    dest: /etc/containers/policy.json
#    owner: root
#    group: root
#    mode: '0644'
#

#- name: Update CA & Create Auth file for Quay
#  ansible.builtin.shell: |
#    update-ca-trust 
#    podman login --authfile "{{ reg_creds }}" -u {{ quay_user }} -p {{ quay_pwd }} {{ dest_registry }}:{{ dest_registry_port }}
#    podman login --authfile "{{ reg_creds }}" -u {{ registry_user }} -p {{ registry_pwd }} registry.redhat.io
#  args:
#    chdir: "{{ quay_install_home }}"

#- name: Remove an image
#  containers.podman.podman_image:
#    name: "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror/{{ new_operator_index }}:{{ ocp_version }}"
#    state: absent
#
#
#- name: Trailor Operator index
#  ansible.builtin.shell: |
#    podman login --authfile="{{ reg_creds }}"  "{{ dest_registry }}:{{ dest_registry_port }}"
#    podman login -u {{ registry_user }} -p {{ registry_pwd }}   registry.redhat.io
#    opm index prune -f "registry.redhat.io/redhat/{{ soure_operator_index }}:{{ ocp_version }}" -p {{ operator_list | join(',') }} -t "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror/{{ new_operator_index }}:{{ ocp_version }}"
#  args:
#    chdir: "{{ quay_install_home }}"

#- name: Build and push an image to multiple registries with separate parameters
#  containers.podman.podman_image:
#    name: "{{ item.name }}"
#    tag: "{{ item.tag }}"
#    push: yes
#    auth_file: "{{ reg_creds }}"
#    push_args:
#      dest: "{{ item.dest }}"
#  loop:
#  - name: "{{ new_operator_index }}"
#    tag: "{{ ocp_version }}"
#    dest: "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror/"

#- name: Tail Operator index
#  ansible.builtin.shell: |
#    oc adm catalog mirror "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror/{{ new_operator_index }}:{{ ocp_version }}" "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror"  -a "{{ reg_creds }}" --index-filter-by-os='linux/amd64' --manifests-only
#  args:
#    chdir: "{{ mirror_home }}"
#  register: result
#
#- debug: var=result
#
#
#- name: Extract Password from the installation log
#  register: result
#  args:
#    stdin: |
#      import re
#      search_pattern = search_pattern = "^wrote\s+mirroring\s+manifests\s+to\s+(.+?)$"
#      for line in {{ result.stdout_lines }}:
#        if re.search(search_pattern, line):
#          f = re.search(search_pattern, line).group(1).strip()
#          print(f)
#  command: /usr/bin/python3
#
#- debug:
#    msg: "{{ result.stdout }}"
#
#- name: Update catalogSource.yaml
#  ansible.builtin.replace:
#    path: "{{ mirror_home }}/{{ result.stdout }}/catalogSource.yaml"
#    regexp: '^(.*)olm-mirror\/olm\-mirror\-(.*)$'
#    replace: '\1olm-mirror/\2'
#
#
#- name: Copy files from foo to bar
#  ansible.builtin.copy:
#    src:  "{{ mirror_home }}/{{ result.stdout }}/"
#    dest: "{{ mirror_home }}/manifests-{{ new_operator_index }}"


#- name: Dry-RUN
#  ansible.builtin.shell: |
#    oc adm release mirror -a {{reg_creds}}  \
#    --from=quay.io/{{PRODUCT_REPO}}/{{RELEASE_NAME}}:{{OCP_RELEASE}}-{{ARCHITECTURE}} \
#    --to={{dest_registry}}:{{dest_registry_port}}/{{LOCAL_REPOSITORY}} \
#    --to-release-image={{dest_registry}}:{{dest_registry_port}}/{{LOCAL_REPOSITORY}}:{{OCP_RELEASE}}-{{ARCHITECTURE}} --dry-run | tee "{{ mirror_home }}/manifests-{{ new_operator_index }}/dry-run.log"
#  args:
#    chdir: "{{ mirror_home }}"
#  register: result
#
#- debug: var=result

- name: Morring cluster images to local disk
  block:
  - name: Mirror the cluster images to local disk
    ansible.builtin.shell: |
      oc adm release mirror -a {{reg_creds}}  \
      --to-dir={{REMOVABLE_MEDIA_PATH}}/mirror \
      quay.io/{{PRODUCT_REPO}}/{{RELEASE_NAME}}:{{OCP_RELEASE}}-{{ARCHITECTURE}} | tee "{{ mirror_home }}/manifests-{{ new_operator_index }}/mirror_cluster.log"
    args:
      chdir: "{{ mirror_home }}"
    register: result
    until: 
    - "'Configmap signature file' in result.stdout"
    - "'Success' in result.stdout"
    retries: 3
    delay: 15
  
  - debug: var=result
  when: mirroring_cluster_images


- name: Morring Operators' images to local disk
  block:
  - name: Mirror the cluster images to local disk
    ansible.builtin.shell: |
      oc adm catalog mirror \
      "{{ dest_registry }}:{{ dest_registry_port }}/olm-mirror/{{ new_operator_index }}:{{ ocp_version }}" \
      file:///local/index -a "{{ reg_creds }}" --index-filter-by-os='linux/amd64' | tee "{{ mirror_home }}/manifests-{{ new_operator_index }}/mirror_operators.log"
    args:
      chdir: "{{ mirror_home }}"
    register: result
    until: 
    - "'wrote mirroring manifests ' in result.stdout"
    - "'To upload local images to a registry' in result.stdout"
    retries: 3
    delay: 15
  
  - debug: var=result
  when: mirroring_operator_images


- name: Upload the Operators' images to quay mirror registry from local disk
  block:
  - name: Mirror the cluster images to local disk
    ansible.builtin.shell: |
      oc adm catalog mirror \
      file://local/index/olm-mirror/{{ new_operator_index }}:{{ ocp_version }} \
      {{ dest_registry }}:{{ dest_registry_port }}/olm-mirror \
      -a {{ reg_creds }} --index-filter-by-os='.*' | tee "{{ mirror_home }}/manifests-{{ new_operator_index }}/upload_operators.log"
    args:
      chdir: "{{ mirror_home }}"
    register: result
    until: 
    - "'wrote mirroring manifests to ' in result.stdout"
    retries: 3
    delay: 15
  
  - debug: var=result
  when: uploading_operator_images
